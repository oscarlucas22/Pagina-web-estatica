<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-US">
  <id>https://github.com/oscarlucas22/</id>
  <title>LucasBlog</title>
  <subtitle>Tu página de confianza</subtitle>
  <author>
    <name>Óscar Lucas</name>
  </author>
  <updated>2022-10-28T06:38:06.993Z</updated>
  <generator>@mr-hope/vuepress-plugin-feed</generator>
  <link rel="self" href="https://github.com/oscarlucas22/atom.xml"/>
  <link rel="alternate" href="https://github.com/oscarlucas22/"/>
  <category term="Guia"/>
  <contributor>
    <name>Óscar Lucas</name>
  </contributor>
  <entry>
    <title type="html">MongoDB en Debian 11 Bullseye</title>
    <id>https://github.com/oscarlucas22/guide/mongo/</id>
    <link href="https://github.com/oscarlucas22/guide/mongo/"/>
    <updated>2022-10-27T12:35:53.000Z</updated>
    <content type="html"><![CDATA[<h1 id="mongodb-en-debian-11-bullseye"> MongoDB en Debian 11 Bullseye</h1>
<h2 id="instalacion-de-mongodb-en-debian-11-bullseye"> Instalación de MongoDB en Debian 11 Bullseye</h2>
<p><font color="#800080"><strong>Paso 1</strong></font> Instalar paquetes requeridos</p>
<div><pre><code>sudo apt install dirmngr gnupg apt-transport-https software-properties-common ca-certificates curl -y
</code></pre>
</div><p><font color="#800080"><strong>Paso 2</strong></font> Importar repositorio de MongoDB</p>
<div><pre><code>sudo wget -O- https://www.mongodb.org/static/pgp/server-5.0.asc | gpg --dearmor | sudo tee /usr/share/keyrings/mongodb.gpg
</code></pre>
</div><p><font color="#800080"><strong>Paso 3</strong></font> Agregamos el repositorio</p>
<div><pre><code>echo 'deb [signed-by=/usr/share/keyrings/mongodb.gpg] http://repo.mongodb.org/apt/debian buster/mongodb-org/5.0 main' | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list
</code></pre>
</div><p><font color="#800080"><strong>Paso 4</strong></font> Actualizamos</p>
<div><pre><code>sudo apt-get update
</code></pre>
</div><p><font color="#800080"><strong>Paso 5</strong></font> Instalar MongoDB 5.0</p>
<div><pre><code>sudo apt install mongodb-org -y
</code></pre>
</div><p><font color="#800080"><strong>Paso 6</strong></font> Activamos el servicio de mongodb</p>
<div><pre><code>sudo systemctl enable mongod --now
</code></pre>
</div><p><font color="#800080"><strong>Paso 7</strong></font> Verificamos la version</p>
<div><pre><code>mongo --eval 'db.runCommand({ connectionStatus: 1 })'
</code></pre>
</div><p><font color="#800080"><strong>Paso 8</strong></font> Configurar la seguridad de MongoDB</p>
<div><pre><code>sudo nano /etc/mongod.conf
</code></pre>
</div><hr>
<div><pre><code>security:
    authorization: enabled
</code></pre>
</div><p><font color="#800080"><strong>Paso 9</strong></font> Reiniciamos servicio</p>
<div><pre><code>sudo systemctl restart mongod
</code></pre>
</div><h2 id="creacion-de-usuario"> Creación de usuario</h2>
<p><font color="#800080"><strong>Paso 1</strong></font> Crear usuario administrador en MongoDB</p>
<div><pre><code>mongo
</code></pre>
</div><p><font color="#800080"><strong>Paso 2</strong></font> Nos conectamos como administrador</p>
<div><pre><code>use admin
</code></pre>
</div><p><font color="#800080"><strong>Paso 3</strong></font> Creamos usuario</p>
<div><pre><code>db.createUser(
    {
        user: &quot;lucas&quot;, 
        pwd: &quot;admin&quot;, 
        roles: [ { role: &quot;root&quot;, db: &quot;admin&quot; } ]
    }
)
</code></pre>
</div><p><font color="#800080"><strong>Paso 4</strong></font> Nos conectamos</p>
<div><pre><code>mongo --port 27017 --authenticationDatabase &quot;admin&quot; -u &quot;lucas&quot; -p
</code></pre>
</div><hr>
<div><pre><code>mongosh -u lucas
</code></pre>
</div><p>¡Gracias!</p>
]]></content>
    <author>
      <name>Óscar Lucas</name>
    </author>
    <contributor>
      <name>Óscar Lucas</name>
    </contributor>
    <published>2022-10-24T18:41:09.000Z</published>
    <rights>Copyright by Óscar Lucas</rights>
  </entry>
  <entry>
    <title type="html">MySQL en Debian 11 Bullseye</title>
    <id>https://github.com/oscarlucas22/guide/mysql/</id>
    <link href="https://github.com/oscarlucas22/guide/mysql/"/>
    <updated>2022-10-27T12:35:53.000Z</updated>
    <content type="html"><![CDATA[<h1 id="mysql-en-debian-11-bullseye"> MySQL en Debian 11 Bullseye</h1>
<h2 id="instalacion-de-mysql-en-debian-11-bullseye"> Instalación de MySQL en Debian 11 Bullseye</h2>
<p>Para conseguir una instalación correcta debemos cumplir los siguientes requisitos:</p>
<p><input type="checkbox" name="vehicle" value="Bike"> Tener una maquina Debian 11 actualizada</p>
<p><input type="checkbox" name="vehicle" value="Bike"> Tener un usuario con privilegios de sudo</p>
<p><input type="checkbox" name="vehicle" value="Bike"> Tener acceso a internet</p>
<p>Antes de comenzar con la instalción actualizaremos nuestra maquina</p>
<div><pre><code>sudo apt update &amp;&amp; sudo apt upgrade
</code></pre>
</div><p>E instalamos las herramientas</p>
<div><pre><code>sudo apt install -y gnupg wget
</code></pre>
</div><p>Despues de esto empezaremos ya con la instalación de MySQL.</p>
<h2 id="configuracion-del-repositorio-de-mysql-para-debian-11-bullseye"> Configuración del repositorio de MySQL para Debian 11 Bullseye</h2>
<p>Vamos a ver cómo configurar el repositorio oficial de MySQL Server para Debian 11.</p>
<p>Para no tener que registrarse en la pagina de mysql aqui os dejo el <a href="https://dev.mysql.com/get/mysql-apt-config_0.8.22-1_all.deb" target="_blank" rel="noopener noreferrer">enlace de descarga<i>Content not supported</i></a></p>
<p>Una vez ya con el paquete descargado procedemos con la instalación:</p>
<div><pre><code>cd Descargas &amp;&amp; sudo dpkg -i mysql-apt-config_0.8.22-1_all.deb
</code></pre>
</div><p>Al instalarse este paquete se lanzará un pequeño configurador en modo consola que nos mostrará las características que ofrece por defecto el nuevo repositorio:</p>
<p><img src="./../images/mysql/3.png" alt="image"></p>
<p>La primera opción nos muestra la versión de MySQL que se va a instalar, por defecto MySQL Server 8.0, aunque sería posible cambiarla por MySQL Cluster 8.0.</p>
<p>Por defecto, la segunda opción nos informa de que está activado el repositorio de herramientas y conectores, que es lo deseable, aunque podríamos desactivarlo.</p>
<p>Y, finalmente, la tercera opción ofrece un repositorio de software en pruebas, experimental, etc. que, con buen criterio, está desactivado inicialmente (aunque se puede activar).</p>
<p>Para salir del configurador seleccionaremos <em>Ok</em> y el instalador configurará el repositorio con los valores seleccionados.</p>
<p>Debemos actualizar la información de los repositorios para que se incluyan las nuevas listas de paquetes disponibles:</p>
<div><pre><code>sudo apt update &amp;&amp; sudo apt upgrade
</code></pre>
</div><h2 id="instalar-mysql-en-debian-11"> Instalar MySQL en Debian 11</h2>
<p>Ahora comenzaremos con la instalación de MySQL en Debian 11:</p>
<div><pre><code>sudo apt install -y mysql-server
</code></pre>
</div><p>Una vez descargados este paquete y sus dependencias, durante la instalación de los mismos, se nos solicitará la contraseña del usuario administrador root de MySQL:</p>
<p><img src="./../images/mysql/5.png" alt="image"></p>
<p>Si dejamos la contraseña en blanco se usará la autenticación por sockets de Unix, es decir, sólo el usuario root de Debian 11 o usuarios privilegiados con sudo podrán conectar como usuario root de MySQL. En cambio, si creamos una contraseña se usará el típico sistema de usuario/contraseña para acceder como root a MySQL Server. Depende de tus necesidades o gustos elegir uno u otro sistema.</p>
<p>Este instalador también nos advierte de la disponibilidad del nuevo plugin mejorado de autenticación, que tiene la desventaja de no ser compatible con conectores y clientes antiguos:</p>
<p><img src="./../images/mysql/6.png" alt="image"></p>
<p>Terminada esta pequeña configuración inicial, la instalación termina creando un nuevo servicio en Debian 11, el servicio mysql.service o simplemente mysql, que queda en ejecución y habilitado para su inicio automático.</p>
<p>Podemos comprobar en cualquier momento el estado de dicho servicio con el comando <code>systemctl</code>:</p>
<div><pre><code>systemctl status mysql
</code></pre>
</div><p><img src="./../images/mysql/12.png" alt="image"></p>
<p>También disponemos del cliente de consola mysql que podemos utilizar para conectar al servicio con el usuario root, si elegimos el acceso por sockets de Unix:</p>
<div><pre><code>sudo mysql
</code></pre>
</div><p>O especificando usuario y contraseña:</p>
<div><pre><code>mysql -u root -p
</code></pre>
</div><p><img src="./../images/mysql/8.png" alt="image"></p>
<h3 id="crear-un-usuario-administrador-propio"> Crear un usuario administrador propio</h3>
<p>Es posible que necesites un usuario administrador de MySQL Server con acceso mediante contraseña para conectar al servicio desde aplicaciones, gestores, clientes gráficos, conexiones remotas, etc. dejando al usuario root con acceso únicamente local.</p>
<p>Esto es fácil de hacer desde el cliente mysql, en el que creamos un usuario con contraseña:</p>
<div><pre><code>&gt; create user lucas identified by 'contraseña'; 
</code></pre>
</div><p>Y a continuación aplicamos permisos sobre todas las bases de datos y modificación de permisos de otros usuarios:</p>
<div><pre><code>&gt; grant all privileges on *.* to lucas with grant option;
</code></pre>
</div><p>Refrescamos la tabla de permisos:</p>
<div><pre><code>&gt; flush privileges;
</code></pre>
</div><p>Y cerramos la conexión:</p>
<div><pre><code>&gt; exit
</code></pre>
</div><p><img src="./../images/mysql/10.png" alt="image"></p>
<p>Y con esto ya tendríamos todo listo.</p>
<p>Y así podremos acceder a nuestro usuario ya creado</p>
<p><img src="./../images/mysql/11.png" alt="image"></p>
<p>¡Gracias!</p>
]]></content>
    <author>
      <name>Óscar Lucas</name>
    </author>
    <contributor>
      <name>Óscar Lucas</name>
    </contributor>
    <published>2022-10-24T18:41:09.000Z</published>
    <rights>Copyright by Óscar Lucas</rights>
  </entry>
  <entry>
    <title type="html">Oracle en Debian 11 Bullseye</title>
    <id>https://github.com/oscarlucas22/guide/oracle/</id>
    <link href="https://github.com/oscarlucas22/guide/oracle/"/>
    <updated>2022-10-28T06:37:47.000Z</updated>
    <content type="html"><![CDATA[<h1 id="oracle-en-debian-11-bullseye"> Oracle en Debian 11 Bullseye</h1>
<h2 id="instalacion-de-oracle-en-debian-11-bullseye"> Instalación de Oracle en Debian 11 Bullseye</h2>
<p><font color="#800080"><strong>Paso 1</strong></font></p>
<p>Antes de instalar el paquete, tenemos que configurar algunas cosas. Empezaremos creando el script:</p>
<div><pre><code>sudo nano /sbin/chkconfig
</code></pre>
</div><p>Y copiamos estas líneas en el archivo:</p>
<div><pre><code>#!/bin/bash
# Oracle XE installer chkconfig hack for Ubuntu
file=/etc/init.d/oracle-xe
if [[ ! `tail -n1 $file | grep INIT` ]]; then
echo &gt;&gt; $file
echo '### BEGIN INIT INFO' &gt;&gt; $file
echo '# Provides: OracleXE' &gt;&gt; $file
echo '# Required-Start: $remote_fs $syslog' &gt;&gt; $file
echo '# Required-Stop: $remote_fs $syslog' &gt;&gt; $file
echo '# Default-Start: 2 3 4 5' &gt;&gt; $file
echo '# Default-Stop: 0 1 6' &gt;&gt; $file
echo '# Short-Description: Oracle 19c Express Edition' &gt;&gt; $file
echo '### END INIT INFO' &gt;&gt; $file
fi
update-rc.d oracle-xe defaults 80 01
</code></pre>
</div><p><font color="#800080"><strong>Paso 2</strong></font></p>
<p>Damos los permisos necesarios al archivo:</p>
<div><pre><code>sudo chmod 755 /sbin/chkconfig
</code></pre>
</div><p><font color="#800080"><strong>Paso 3</strong></font></p>
<p>Oracle 19c XE requiere de una configuración especial en kernel para funcionar. Por eso necesitamos añadir algunos parámetros al mismo.</p>
<div><pre><code>sudo nano /etc/sysctl.d/60-oracle.conf
</code></pre>
</div><p>Copiamos lo siguiente y guardamos.</p>
<div><pre><code>fs.file-max=6815744
net.ipv4.ip_local_port_range=9000 65000
kernel.sem=250 32000 100 128
kernel.shmmax=536870912
</code></pre>
</div><p><font color="#800080"><strong>Paso 4</strong></font></p>
<p>Para cargar los parámetros del kernel sin reiniciar:</p>
<div><pre><code>sudo service procps start
</code></pre>
</div><p><font color="#800080"><strong>Paso 5</strong></font> <strong>Comienzo de la instalación</strong></p>
<p>Y ahora sí, instalamos el paquete <a href="https://www.dropbox.com/s/p1vhrnjw73fdc70/oracle-database-ee-19c_1.0-2_amd64.deb?dl=0" target="_blank" rel="noopener noreferrer">.deb<i>Content not supported</i></a>:</p>
<div><pre><code>sudo dpkg -i oracle-database-xe-18c_1.0-2_amd64.deb
</code></pre>
</div><p>Después de unos 10 minutos el proceso terminará. Ejecutamos el siguiente comando para configurar la contraseña de administrador de la base de datos y demás cosas:</p>
<div><pre><code>sudo /etc/init.d/oracledb_ORCLCDB-19c configure
</code></pre>
</div><p>Veremos que da error. Eso se debe a que en al script de configuración le hace falta un parámetro. Para añadirlo entramos en el script con:</p>
<div><pre><code>sudo nano /etc/init.d/oracledb_ORCLCDB-19c configure
</code></pre>
</div><p>Y buscamos(Ctrl + W) en la linea donde pone &quot;Configuring&quot;</p>
<p><img src="./../images/ABD/1-oracle.png" alt="image"></p>
<p>Borramos la linea que se ve marcada en la imagen y copiamos en su lugar la siguiente:</p>
<div><pre><code>$SU -s /bin/bash  $ORACLE_OWNER -c &quot;$DBCA -silent -createDatabase -gdbName $ORACLE_SID -templateName $TEMPLATE_NAME -characterSet $CHARSET -createAsContainerDatabase $CREATE_AS_CDB -numberOfPDBs $NUMBER_OF_PDBS -pdbName $PDB_NAME -createListener $LISTENER_NAME:$LISTENER_PORT -datafileDestination $ORACLE_DATA_LOCATION -sid $ORACLE_SID -autoGeneratePasswords -emConfiguration DBEXPRESS -emExpressPort $EM_EXPRESS_PORT -J-Doracle.assistants.dbca.validate.ConfigurationParams=false&quot;
</code></pre>
</div><p>Ahora lo intentamos de nuevo:</p>
<div><pre><code>sudo /etc/init.d/oracledb_ORCLCDB-19c configure
</code></pre>
</div><p><code>**Nota**: Si nos salta un error de netstat tendremos que instalarlo *sudo apt install net-tools*</code></p>
<p><code>**Nota**: Si nos sigue saliendo un error instalaremos lo siguiente *sudo apt install libaio1 unixodbc*</code></p>
<p>Y despues de esto ejecutaremos de nuevo el comando y ya debería de ir sino reinicia la maquina (<em>sudo reboot</em>) y vuélvelo a probar</p>
<p><font color="#800080"><strong>Paso 6</strong></font></p>
<p>Añadimos las variables de entorno a bash:</p>
<div><pre><code>nano ~/.bashrc
</code></pre>
</div><p>Copiamos las siguientes líneas al final del fichero:</p>
<div><pre><code>export ORACLE_HOME=/opt/oracle/product/19c/dbhome_1
export ORACLE_SID=ORCLCDB
export ORACLE_BASE=/opt/oracle/oradata
export LD_LIBRARY_PATH=$ORACLE_HOME/lib:$LD_LIBRARY_PATH
export PATH=$ORACLE_HOME/bin:$PATH
</code></pre>
</div><p><font color="#800080"><strong>Paso 7</strong></font></p>
<p>Para finalizar reiniciamos el servicio de Oracle 19c:</p>
<div><pre><code>sudo service oracledb_ORCLCDB-19c restart
</code></pre>
</div><h2 id="crear-un-usuario"> Crear un usuario</h2>
<p><font color="#800080"><strong>Paso 1</strong></font></p>
]]></content>
    <author>
      <name>Óscar Lucas</name>
    </author>
    <contributor>
      <name>Óscar Lucas</name>
    </contributor>
    <published>2022-10-24T18:41:09.000Z</published>
    <rights>Copyright by Óscar Lucas</rights>
  </entry>
  <entry>
    <title type="html">PostgreSQL en Debian 11 Bullseye</title>
    <id>https://github.com/oscarlucas22/guide/postgresql/</id>
    <link href="https://github.com/oscarlucas22/guide/postgresql/"/>
    <updated>2022-10-27T12:35:53.000Z</updated>
    <content type="html"><![CDATA[<h1 id="postgresql-en-debian-11-bullseye"> PostgreSQL en Debian 11 Bullseye</h1>
<h2 id="instalacion-de-postgresql-en-debian-11-bullseye"> Instalación de PostgreSQL en Debian 11 Bullseye</h2>
<p><font color="#800080"><strong>Paso 1</strong></font> Actualizar el sistema</p>
<div><pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y
</code></pre>
</div><p><font color="#800080"><strong>Paso 2</strong></font> Instalamos postgresql</p>
<div><pre><code>sudo apt install -y postgresql*
</code></pre>
</div><p>Esto tradará un poco</p>
<p><font color="#800080"><strong>Paso 3</strong></font> Comprobamos el estado del servicio</p>
<div><pre><code>systemctl status postgresql
</code></pre>
</div><p>En el caso que no estuviera iniciado lo iniciaremos</p>
<div><pre><code>systemctl start postgresql
</code></pre>
</div><p><font color="#800080"><strong>Paso 4</strong></font> Instalamos el cliente</p>
<div><pre><code>sudo apt install -y postgresql-client
</code></pre>
</div><h2 id="creacion-de-usuario"> Creación de usuario</h2>
<p>Para crear el usuario ingresaremos primero a postgres:</p>
<div><pre><code>sudo -u postgres psql
</code></pre>
</div><p><strong>Crearemos el usuario:</strong></p>
<div><pre><code>CREATE USER lucas PASSWORD 'TU_PASSWORD';
</code></pre>
</div><p><strong>Asignar permisos de super usuario a un usuario</strong></p>
<div><pre><code>ALTER ROLE lucas WITH SUPERUSER;
</code></pre>
</div><p><strong>Cambiar la contraseña de un usuario</strong></p>
<div><pre><code>ALTER ROLE lucas WITH PASSWORD 'NUEVO_PASSWORD';
</code></pre>
</div><p><strong>Crear una base de datos con un usuario específico como propietario</strong></p>
<div><pre><code>CREATE DATABASE lucas_db WITH OWNER lucas;
</code></pre>
</div><p><strong>Asignar todos los permisos a un usuario a una base de datos existente</strong></p>
<div><pre><code>GRANT ALL PRIVILEGES ON DATABASE lucas_db TO lucas;
</code></pre>
</div><h2 id="acceso-remoto"> Acceso remoto</h2>
<p><font color="#800080"><strong>Paso 1</strong></font> Acceso remoto</p>
<div><pre><code>sudo nano /etc/postgresql/13/main/postgresql.conf

#listen_addresses = 'localhost'         # what IP address(es) to listen on;
</code></pre>
</div><p><font color="#800080"><strong>Paso 2</strong></font> Activamos contraseñas de red</p>
<div><pre><code>sudo nano /etc/postgresql/13/main/pg_hba.conf
</code></pre>
</div><p>Acceso desde red</p>
<div><pre><code>host    all             all             all                     md5
</code></pre>
</div><p><font color="#800080"><strong>Paso 3</strong></font> Reiniciamos el servicio</p>
<div><pre><code>sudo systemctl reload postgresql
</code></pre>
</div><p><font color="#800080"><strong>Paso 4</strong></font> Añadimos regla de firewall</p>
<div><pre><code>sudo ufw allow postgresql

psql -h debian11.local.lan -U oscar
</code></pre>
</div><p>¡Gracias!</p>
]]></content>
    <author>
      <name>Óscar Lucas</name>
    </author>
    <contributor>
      <name>Óscar Lucas</name>
    </contributor>
    <published>2022-10-24T18:41:09.000Z</published>
    <rights>Copyright by Óscar Lucas</rights>
  </entry>
  <entry>
    <title type="html">Compilación de un programa en C utilizando un Makefile</title>
    <id>https://github.com/oscarlucas22/guide/makefile/</id>
    <link href="https://github.com/oscarlucas22/guide/makefile/"/>
    <updated>2022-10-27T12:35:53.000Z</updated>
    <content type="html"><![CDATA[<h1 id="compilacion-de-un-programa-en-c-utilizando-un-makefile"> Compilación de un programa en C utilizando un Makefile</h1>
<p>Aqui dejo la url de la web de <a href="https://packages.debian.org/bullseye/imagination" target="_blank" rel="noopener noreferrer">Debian<i>Content not supported</i></a> donde se encuentra la compilación del paquete imagination.</p>
<p><font color="#FFFF00"><strong>Paso 1</strong></font> Descarga del código fuente</p>
<p>Primero instalaremos dpkg-dev</p>
<div><pre><code>sudo apt install dpkg-dev
</code></pre>
</div><p>Despues instalaremos imagination con el comando <code>apt source</code></p>
<div><pre><code>apt source imagination
</code></pre>
</div><p><img src="./../images/ASO/1-ASO.png" alt="image"></p>
<p><img src="./../images/ASO/2-ASO.png" alt="image"></p>
<p><font color="#FFFF00"><strong>Paso 2</strong></font> Instalación dependencias</p>
<p>Para instalar las dependencias utilizaremos el comando <code>apt build-dep</code></p>
<div><pre><code>sudo apt build-dep imagination
</code></pre>
</div><p><font color="#FFFF00"><strong>Paso 3</strong></font> Compilación del paquete</p>
<p>Para poder compilar el paquete nos moveremos a la carpeta descomprimida</p>
<div><pre><code>cd imagination-3.6/

./configure
</code></pre>
</div><p><img src="./../images/ASO/3-ASO.png" alt="image"></p>
<p><img src="./../images/ASO/4-ASO.png" alt="image"></p>
<p>Y despues de esto ejecutaremos el comando <code>make</code></p>
<div><pre><code>make
</code></pre>
</div><p><font color="#FFFF00"><strong>Paso 4</strong></font> Instalación del paquete</p>
<p>Una vez ya este compilado ejecutaremos:</p>
<div><pre><code>sudo make install
</code></pre>
</div><p>Y con esto ya tendriamos instalado el paquete</p>
<p><font color="#FFFF00"><strong>Paso 5</strong></font> Desinstalación del paquete</p>
<p>Para poder desinstalar el paquete debemos ejecutar:</p>
<div><pre><code>cd imagination-3.6/

sudo make uninstall
</code></pre>
</div><p>Y con esto ya estaría desinstalado</p>
]]></content>
    <author>
      <name>Óscar Lucas</name>
    </author>
    <contributor>
      <name>Óscar Lucas</name>
    </contributor>
    <published>2022-10-13T20:49:22.000Z</published>
    <rights>Copyright by Óscar Lucas</rights>
  </entry>
  <entry>
    <title type="html">Guía</title>
    <id>https://github.com/oscarlucas22/guide/</id>
    <link href="https://github.com/oscarlucas22/guide/"/>
    <updated>2022-10-27T12:35:53.000Z</updated>
    <content type="html"><![CDATA[<h1 id="guia"> Guía</h1>
<ul>
<li>
<p><a href="./makefile.html">Compilación de un programa en C utilizando un Makefile</a></p>
</li>
<li>
<p><a href="./ABD.html">Servidores y Clientes de Base de Datos</a></p>
</li>
<li>
<p><a href="https://www.dropbox.com/s/84gl6ea0ls0xksy/Plantilla%20Trabajo%20Grupal%201.pdf?dl=0" target="_blank" rel="noopener noreferrer">Herramientas de Seguridad (SNORT, NESSUS, TRIPWIRE, RKHUNTER, HYDRA)<i>Content not supported</i></a></p>
</li>
</ul>
]]></content>
    <author>
      <name>Óscar Lucas</name>
    </author>
    <category term="Guia" scheme=""/>
    <contributor>
      <name>Óscar Lucas</name>
    </contributor>
    <published>2022-10-08T12:32:22.000Z</published>
    <rights>Copyright by Óscar Lucas</rights>
  </entry>
</feed>