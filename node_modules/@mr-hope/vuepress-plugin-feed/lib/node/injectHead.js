"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.injectLinkstoHead = void 0;
const options_1 = require("./options");
const utils_1 = require("./utils");
const injectLinkstoHead = (context, options) => {
    const { base, siteConfig } = context;
    const localePaths = Object.keys(options);
    // there is only one language, so we append it to siteData
    if (localePaths.length === 1) {
        const { atomOutputFilename, jsonOutputFilename, rssOutputFilename } = (0, options_1.getFilename)(options["/"]);
        const { atom, json, rss, hostname } = options["/"];
        const getHeadItem = (name, fileName, type) => {
            var _a, _b;
            return [
                "link",
                {
                    rel: "alternate",
                    type,
                    href: (0, utils_1.resolveUrl)(hostname, base, fileName),
                    title: `${siteConfig.title || ((_b = (_a = siteConfig.locales) === null || _a === void 0 ? void 0 : _a["/"]) === null || _b === void 0 ? void 0 : _b.title) || ""} ${name} Feed`,
                },
            ];
        };
        // ensure head exists
        if (!siteConfig.head)
            siteConfig.head = [];
        // add atom link
        if (atom)
            siteConfig.head.push(getHeadItem("Atom", atomOutputFilename, "application/atom+xml"));
        // add json link
        if (json)
            siteConfig.head.push(getHeadItem("JSON", jsonOutputFilename, "application/json"));
        // add rss link
        if (rss)
            siteConfig.head.push(getHeadItem("RSS", rssOutputFilename, "application/rss+xml"));
    }
};
exports.injectLinkstoHead = injectLinkstoHead;
//# sourceMappingURL=injectHead.js.map