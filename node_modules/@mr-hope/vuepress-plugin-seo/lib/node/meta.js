"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOGP = void 0;
/* eslint-disable @typescript-eslint/naming-convention */
const utils_1 = require("./utils");
const getOGP = (page, options, context) => {
    var _a, _b, _c, _d, _e;
    const { isArticle = (page) => Boolean(page._filePath && !page.frontmatter["home"]), } = options;
    const { base, siteConfig } = context;
    const { frontmatter: { author: pageAuthor, time, date = time, tag, tags = tag, }, } = page;
    const title = ((_b = (_a = siteConfig.locales) === null || _a === void 0 ? void 0 : _a[page._localePath]) === null || _b === void 0 ? void 0 : _b.title) ||
        siteConfig.title ||
        ((_d = (_c = siteConfig.locales) === null || _c === void 0 ? void 0 : _c["/"]) === null || _d === void 0 ? void 0 : _d.title) ||
        "";
    const author = pageAuthor === false ? [] : (0, utils_1.getAuthor)(pageAuthor || options.author);
    const modifiedTime = page.updateTimeStamp
        ? new Date(page.updateTimeStamp).toISOString()
        : "";
    const articleTags = Array.isArray(tags)
        ? tags
        : typeof tag === "string"
            ? [tag]
            : [];
    const articleTitle = page.title;
    const cover = (0, utils_1.getCover)(page, options, context);
    const images = (0, utils_1.getImages)(page, options, context);
    const locales = (0, utils_1.getLocales)(page._computed.$lang, siteConfig.locales || {});
    let publishedTime = "";
    if (date instanceof Date)
        publishedTime = new Date(date).toISOString();
    else if (date) {
        const dateInfo = (0, utils_1.getDate)(date);
        if (dateInfo && dateInfo.value)
            publishedTime = dateInfo.value.toISOString();
    }
    const ogImage = cover || images[0] || options.fallBackImage || "";
    const defaultOGP = {
        "og:url": (0, utils_1.resolveUrl)(options.hostname, base, page.path),
        "og:site_name": title,
        "og:title": articleTitle,
        "og:description": page.frontmatter.description ||
            (options.autoDescription ? page.frontmatter.summary || "" : ""),
        "og:type": isArticle(page) ? "article" : "website",
        "og:image": ogImage,
        "og:updated_time": modifiedTime,
        "og:locale": page._computed.$lang,
        "og:locale:alternate": locales,
        ...(options.restrictions
            ? { "og:restrictions:age": options.restrictions }
            : {}),
        ...(options.twitterID ? { "twitter:creator": options.twitterID } : {}),
        ...(ogImage
            ? {
                "twitter:card": "summary_large_image",
                "twitter:image:alt": articleTitle,
            }
            : {}),
        "article:author": (_e = author[0]) === null || _e === void 0 ? void 0 : _e.name,
        "article:tag": articleTags,
        "article:published_time": publishedTime,
        "article:modified_time": modifiedTime,
    };
    return defaultOGP;
};
exports.getOGP = getOGP;
//# sourceMappingURL=meta.js.map