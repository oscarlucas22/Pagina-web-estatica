"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.appendBase = exports.appendBasetoManifest = void 0;
const appendBaseHelper = (base, link) => link.startsWith("/") ? link.replace(/^\//, base) : link;
const appendBasetoManifest = (base, manifest) => {
    if (manifest.icons)
        manifest.icons = manifest.icons.map((icon) => ({
            ...icon,
            src: appendBaseHelper(base, icon.src),
        }));
    if (manifest.shortcuts)
        manifest.shortcuts = manifest.shortcuts.map((shortcut) => {
            var _a;
            return ({
                ...shortcut,
                icons: ((_a = shortcut.icons) === null || _a === void 0 ? void 0 : _a.map((icon) => ({
                    ...icon,
                    src: appendBaseHelper(base, icon.src),
                }))) || [],
                url: appendBaseHelper(base, shortcut.url),
            });
        });
    if (manifest.screenshots)
        manifest.screenshots = manifest.screenshots.map((screenshot) => ({
            ...screenshot,
            src: appendBaseHelper(base, screenshot.src),
        }));
    return manifest;
};
exports.appendBasetoManifest = appendBasetoManifest;
const appendBase = (base, options) => {
    if (options.favicon)
        options.favicon = appendBaseHelper(base, options.favicon);
    if (options.apple) {
        if (options.apple.icon)
            options.apple.icon = appendBaseHelper(base, options.apple.icon);
        if (options.apple.maskIcon)
            options.apple.maskIcon = appendBaseHelper(base, options.apple.maskIcon);
    }
    if (options.msTile && options.msTile.image)
        options.msTile.image = appendBaseHelper(base, options.msTile.image);
    if (options.manifest)
        options.manifest = (0, exports.appendBasetoManifest)(base, options.manifest);
};
exports.appendBase = appendBase;
//# sourceMappingURL=helper.js.map