import Vue from "vue";
export default Vue.extend({
    name: "BreadCrumb",
    props: {
        show: {
            type: Boolean,
            default: true,
        },
        icon: {
            type: Boolean,
            default: true,
        },
        iconPrefix: {
            type: String,
            default: "",
        },
    },
    computed: {
        enable() {
            const pageEnable = this.$page.frontmatter.breadcrumb;
            return (((this.show && pageEnable !== false) || pageEnable === true) &&
                this.config.length > 1);
        },
        displayIcon() {
            const pageEnable = this.$page.frontmatter.breadcrumbIcon;
            return (this.enable &&
                ((this.icon && pageEnable !== false) || pageEnable === true));
        },
        config() {
            const breadcrumbConfig = [];
            const { pages } = this.$site;
            const links = this.getLinks(this.$route);
            // generate breadcrumb config
            for (let index = 1; index < links.length; index++)
                for (let index2 = 0; index2 < pages.length; index2++) {
                    const element = pages[index2];
                    if (element.path === links[index]) {
                        breadcrumbConfig.push({
                            title: element.title,
                            ...(element.frontmatter.icon
                                ? { icon: element.frontmatter.icon }
                                : {}),
                            url: element.path,
                        });
                        break;
                    }
                }
            return breadcrumbConfig;
        },
    },
    methods: {
        getLinks(route) {
            const routePaths = route.path.split("/");
            const links = [];
            let link = "";
            // generate links
            routePaths.forEach((element, index) => {
                if (index !== routePaths.length - 1) {
                    link += `${element}/`;
                    links.push(link);
                }
                else if (element !== "") {
                    link += element;
                    links.push(link);
                }
            });
            return links;
        },
    },
});
//# sourceMappingURL=BreadCrumb.js.map