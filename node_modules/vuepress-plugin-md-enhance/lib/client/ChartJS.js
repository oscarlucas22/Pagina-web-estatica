import Vue from "vue";
import LoadingIcon from "./icons/LoadingIcon.vue";
const parseChartConfig = (config, type) => {
    if (type === "json")
        return JSON.parse(config);
    const exports = {};
    const module = { exports };
    eval(config);
    return module.exports;
};
export default Vue.extend({
    name: "ChartJS",
    components: { LoadingIcon },
    props: {
        config: { type: String, required: true },
        id: { type: String, required: true },
        title: { type: String, default: "" },
        type: { type: String, default: "json" },
    },
    data: () => ({
        loading: true,
    }),
    mounted() {
        void Promise.all([
            import(/* webpackChunkName: "chart" */ "chart.js/auto"),
            // delay
            new Promise((resolve) => setTimeout(resolve, MARKDOWN_ENHANCE_DELAY)),
        ]).then(([{ default: Chart }]) => {
            var _a;
            Chart.defaults.maintainAspectRatio = false;
            const data = parseChartConfig(decodeURIComponent(this.config), this.type);
            const ctx = (_a = this.$refs["chartCanvasElement"]) === null || _a === void 0 ? void 0 : _a.getContext("2d");
            new Chart(ctx, data);
            this.loading = false;
        });
    },
});
//# sourceMappingURL=ChartJS.js.map