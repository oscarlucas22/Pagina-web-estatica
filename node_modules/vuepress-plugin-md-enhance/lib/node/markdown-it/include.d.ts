import type { PluginWithOptions } from "markdown-it";
import type { RuleCore } from "markdown-it/lib/parser_core";
import type { IncludeOptions } from "../../types";
export interface ImportFileInfo {
    filePath: string;
    lineStart: number;
    lineEnd: number | undefined;
}
export interface IncludeInfo {
    cwd: string | null;
    includedFiles: string[];
}
export declare const handleInclude: ({ filePath, lineStart, lineEnd }: ImportFileInfo, { cwd, includedFiles }: IncludeInfo) => string;
export declare const resolveInclude: (content: string, options: Required<IncludeOptions>, { cwd, includedFiles }: IncludeInfo) => string;
export declare const createIncludeCoreRule: (options: Required<IncludeOptions>) => RuleCore;
export declare const include: PluginWithOptions<IncludeOptions>;
